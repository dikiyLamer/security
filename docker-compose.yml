services:

  # postgres:
  #   image: postgres:15.1
  #   volumes:
  #     - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
  #     - postgres_microservice_back_auth:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_USER: auth
  #     POSTGRES_PASSWORD: auth
  #     POSTGRES_DB:  auth
  #   restart: unless-stopped
  #   ports:
  #     - 5434:5432
    
  # postgres_keycloak:
  #   image: postgres:15.1
  #   volumes:
  #     - postgres_keycloak:/var/lib/postgresql/data
  #   ports:
  #     - '5433:5432'
  #   environment:
  #     POSTGRES_USER: keycloak
  #     POSTGRES_PASSWORD: keycloak
  #     POSTGRES_DB: keycloak
  #     PGDATA: '/var/lib/postgresql/data/pgdata'
  #   restart: unless-stopped
  
  # pgadmin:
  #   container_name: pgadmin4_container
  #   image: dpage/pgadmin4
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   ports:
  #     - "5050:80"
  #   volumes:
  #     - pgadmin:/var/lib/pgadmin

  back:
    build: ais_msrv_authorization/
    command: npm run start:prod
    ports:
      - 48300:80
    # depends_on:
    #   - postgres

  # front:
  #   build: ais_mfr_authorization/
  #   labels:
  #     SERVICE_CHECK_INTERVAL: 10s
  #   ports:
  #     - 48350:80
  #   depends_on:
  #     - back

volumes:
  postgres_keycloak:
  pgadmin:
  postgres_microservice_back_auth: